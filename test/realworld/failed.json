{
  "airport-web.appspot.com": {
    "name": "airport-web.appspot.com",
    "apiVersion": "v1",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/airport-web.appspot.com/v1/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/airport-web.appspot.com/v1/swagger.json",
    "updated": "2021-06-21T12:16:53.715Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/securityDefinitions/google_id_token",
          "schemaPath": "#/additionalProperties",
          "keyword": "additionalProperties",
          "params": {
            "additionalProperty": "authorizationUrl"
          },
          "message": "must NOT have additional properties",
          "instanceValue": {
            "authorizationUrl": "",
            "flow": "implicit",
            "type": "oauth2",
            "x-google-issuer": "accounts.google.com",
            "x-google-jwks_uri": "https://www.googleapis.com/oauth2/v1/certs"
          }
        },
        {
          "instancePath": "/securityDefinitions/google_id_token",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "name"
          },
          "message": "must have required property 'name'",
          "instanceValue": {
            "authorizationUrl": "",
            "flow": "implicit",
            "type": "oauth2",
            "x-google-issuer": "accounts.google.com",
            "x-google-jwks_uri": "https://www.googleapis.com/oauth2/v1/certs"
          }
        },
        {
          "instancePath": "/securityDefinitions/google_id_token/authorizationUrl",
          "schemaPath": "#/properties/authorizationUrl/format",
          "keyword": "format",
          "params": {
            "format": "uri"
          },
          "message": "must match format \"uri\"",
          "instanceValue": ""
        },
        {
          "instancePath": "/securityDefinitions/google_id_token",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "tokenUrl"
          },
          "message": "must have required property 'tokenUrl'",
          "instanceValue": {
            "authorizationUrl": "",
            "flow": "implicit",
            "type": "oauth2",
            "x-google-issuer": "accounts.google.com",
            "x-google-jwks_uri": "https://www.googleapis.com/oauth2/v1/certs"
          }
        },
        {
          "instancePath": "/securityDefinitions/google_id_token",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "tokenUrl"
          },
          "message": "must have required property 'tokenUrl'",
          "instanceValue": {
            "authorizationUrl": "",
            "flow": "implicit",
            "type": "oauth2",
            "x-google-issuer": "accounts.google.com",
            "x-google-jwks_uri": "https://www.googleapis.com/oauth2/v1/certs"
          }
        },
        {
          "instancePath": "/securityDefinitions/google_id_token",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "tokenUrl"
          },
          "message": "must have required property 'tokenUrl'",
          "instanceValue": {
            "authorizationUrl": "",
            "flow": "implicit",
            "type": "oauth2",
            "x-google-issuer": "accounts.google.com",
            "x-google-jwks_uri": "https://www.googleapis.com/oauth2/v1/certs"
          }
        },
        {
          "instancePath": "/securityDefinitions/google_id_token",
          "schemaPath": "#/additionalProperties/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "authorizationUrl": "",
            "flow": "implicit",
            "type": "oauth2",
            "x-google-issuer": "accounts.google.com",
            "x-google-jwks_uri": "https://www.googleapis.com/oauth2/v1/certs"
          }
        }
      ]
    }
  },
  "ato.gov.au": {
    "name": "ato.gov.au",
    "apiVersion": "0.0.6",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/ato.gov.au/0.0.6/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/ato.gov.au/0.0.6/swagger.json",
    "updated": "2017-09-06T11:44:38.000Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1individuals~1{partyId}/delete/responses/400",
          "schemaPath": "#/additionalProperties",
          "keyword": "additionalProperties",
          "params": {
            "additionalProperty": "$ref"
          },
          "message": "must NOT have additional properties",
          "instanceValue": {
            "$ref": "#/responses/FailedPrecondition",
            "description": "Individual has related resources and cannot be deleted"
          }
        },
        {
          "instancePath": "/paths/~1individuals~1{partyId}/delete/responses/400",
          "schemaPath": "#/additionalProperties",
          "keyword": "additionalProperties",
          "params": {
            "additionalProperty": "description"
          },
          "message": "must NOT have additional properties",
          "instanceValue": {
            "$ref": "#/responses/FailedPrecondition",
            "description": "Individual has related resources and cannot be deleted"
          }
        },
        {
          "instancePath": "/paths/~1individuals~1{partyId}/delete/responses/400",
          "schemaPath": "#/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/responses/FailedPrecondition",
            "description": "Individual has related resources and cannot be deleted"
          }
        }
      ]
    }
  },
  "azure.com:servicebus": {
    "name": "azure.com:servicebus",
    "apiVersion": "2017-04-01",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/azure.com/servicebus/2017-04-01/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/azure.com/servicebus/2017-04-01/swagger.json",
    "updated": "2019-09-23T09:26:07.000Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1subscriptions~1{subscriptionId}~1resourceGroups~1{resourceGroupName}~1providers~1Microsoft.ServiceBus~1namespaces~1{namespaceName}~1topics~1{topicName}~1subscriptions~1{subscriptionName}~1rules~1{ruleName}/get/externalDocs/url",
          "schemaPath": "#/properties/url/format",
          "keyword": "format",
          "params": {
            "format": "uri"
          },
          "message": "must match format \"uri\"",
          "instanceValue": ""
        }
      ]
    }
  },
  "azure.com:storageimportexport": {
    "name": "azure.com:storageimportexport",
    "apiVersion": "2016-11-01",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/azure.com/storageimportexport/2016-11-01/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/azure.com/storageimportexport/2016-11-01/swagger.json",
    "updated": "2019-07-22T11:03:07.000Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1providers~1Microsoft.ImportExport~1locations/get/externalDocs/url",
          "schemaPath": "#/properties/url/format",
          "keyword": "format",
          "params": {
            "format": "uri"
          },
          "message": "must match format \"uri\"",
          "instanceValue": ""
        }
      ]
    }
  },
  "brex.io": {
    "name": "brex.io",
    "apiVersion": "2021.12",
    "openApiVersion": "3.0.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/brex.io/2021.12/openapi.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/brex.io/2021.12/openapi.json",
    "updated": "2021-07-05T15:07:17.927Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1api~1v1~1company~1deepsearch~1name~1{country}~1{name}/get/responses/200",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "description"
          },
          "message": "must have required property 'description'",
          "instanceValue": {
            "$ref": "#/paths/~1api~1v1~1company~1search~1name~1{country}~1{name}/get/responses/200"
          }
        },
        {
          "instancePath": "/paths/~1api~1v1~1company~1deepsearch~1name~1{country}~1{name}/get/responses/200/$ref",
          "schemaPath": "#/definitions/Reference/patternProperties/%5E%5C%24ref%24/format",
          "keyword": "format",
          "params": {
            "format": "uri-reference"
          },
          "message": "must match format \"uri-reference\"",
          "instanceValue": "#/paths/~1api~1v1~1company~1search~1name~1{country}~1{name}/get/responses/200"
        },
        {
          "instancePath": "/paths/~1api~1v1~1company~1deepsearch~1name~1{country}~1{name}/get/responses/200",
          "schemaPath": "#/patternProperties/%5E%5B1-5%5D(%3F%3A%5Cd%7B2%7D%7CXX)%24/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/paths/~1api~1v1~1company~1search~1name~1{country}~1{name}/get/responses/200"
          }
        }
      ]
    }
  },
  "conjur.local": {
    "name": "conjur.local",
    "apiVersion": "5.1.1",
    "openApiVersion": "3.0.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/conjur.local/5.1.1/openapi.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/conjur.local/5.1.1/openapi.json",
    "updated": "2021-07-05T15:07:17.927Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1authn-azure~1{service_id}~1{account}~1{login}~1authenticate/post/parameters/2/schema",
          "schemaPath": "#/additionalProperties",
          "keyword": "additionalProperties",
          "params": {
            "additionalProperty": "$ref"
          },
          "message": "must NOT have additional properties",
          "instanceValue": {
            "$ref": "#/paths/~1authn~1{account}~1{login}~1authenticate/post/parameters/1/schema"
          }
        },
        {
          "instancePath": "/paths/~1authn-azure~1{service_id}~1{account}~1{login}~1authenticate/post/parameters/2/schema/$ref",
          "schemaPath": "#/definitions/Reference/patternProperties/%5E%5C%24ref%24/format",
          "keyword": "format",
          "params": {
            "format": "uri-reference"
          },
          "message": "must match format \"uri-reference\"",
          "instanceValue": "#/paths/~1authn~1{account}~1{login}~1authenticate/post/parameters/1/schema"
        },
        {
          "instancePath": "/paths/~1authn-azure~1{service_id}~1{account}~1{login}~1authenticate/post/parameters/2/schema",
          "schemaPath": "#/properties/schema/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/paths/~1authn~1{account}~1{login}~1authenticate/post/parameters/1/schema"
          }
        },
        {
          "instancePath": "/paths/~1authn-azure~1{service_id}~1{account}~1{login}~1authenticate/post/parameters/2",
          "schemaPath": "#/definitions/Reference/required",
          "keyword": "required",
          "params": {
            "missingProperty": "$ref"
          },
          "message": "must have required property '$ref'",
          "instanceValue": {
            "description": "URL-encoded login name. For users, it’s the user ID. For hosts, the login name is `host/<host-id>`",
            "in": "path",
            "name": "login",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1authn~1{account}~1{login}~1authenticate/post/parameters/1/schema"
            }
          }
        },
        {
          "instancePath": "/paths/~1authn-azure~1{service_id}~1{account}~1{login}~1authenticate/post/parameters/2",
          "schemaPath": "#/properties/parameters/items/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "description": "URL-encoded login name. For users, it’s the user ID. For hosts, the login name is `host/<host-id>`",
            "in": "path",
            "name": "login",
            "required": true,
            "schema": {
              "$ref": "#/paths/~1authn~1{account}~1{login}~1authenticate/post/parameters/1/schema"
            }
          }
        }
      ]
    }
  },
  "digitalocean.com": {
    "name": "digitalocean.com",
    "apiVersion": "2.0",
    "openApiVersion": "3.0.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/digitalocean.com/2.0/openapi.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/digitalocean.com/2.0/openapi.json",
    "updated": "2021-07-05T15:07:17.927Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1v2~1account~1keys~1{ssh_key_identifier}/delete/parameters/0",
          "schemaPath": "#/definitions/SchemaXORContent/oneOf/0/required",
          "keyword": "required",
          "params": {
            "missingProperty": "schema"
          },
          "message": "must have required property 'schema'",
          "instanceValue": {
            "$ref": "#/paths/~1v2~1account~1keys~1{ssh_key_identifier}/get/parameters/0"
          }
        },
        {
          "instancePath": "/paths/~1v2~1account~1keys~1{ssh_key_identifier}/delete/parameters/0",
          "schemaPath": "#/definitions/SchemaXORContent/oneOf/1/required",
          "keyword": "required",
          "params": {
            "missingProperty": "content"
          },
          "message": "must have required property 'content'",
          "instanceValue": {
            "$ref": "#/paths/~1v2~1account~1keys~1{ssh_key_identifier}/get/parameters/0"
          }
        },
        {
          "instancePath": "/paths/~1v2~1account~1keys~1{ssh_key_identifier}/delete/parameters/0",
          "schemaPath": "#/definitions/SchemaXORContent/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/paths/~1v2~1account~1keys~1{ssh_key_identifier}/get/parameters/0"
          }
        },
        {
          "instancePath": "/paths/~1v2~1account~1keys~1{ssh_key_identifier}/delete/parameters/0/$ref",
          "schemaPath": "#/definitions/Reference/patternProperties/%5E%5C%24ref%24/format",
          "keyword": "format",
          "params": {
            "format": "uri-reference"
          },
          "message": "must match format \"uri-reference\"",
          "instanceValue": "#/paths/~1v2~1account~1keys~1{ssh_key_identifier}/get/parameters/0"
        },
        {
          "instancePath": "/paths/~1v2~1account~1keys~1{ssh_key_identifier}/delete/parameters/0",
          "schemaPath": "#/properties/parameters/items/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/paths/~1v2~1account~1keys~1{ssh_key_identifier}/get/parameters/0"
          }
        }
      ]
    }
  },
  "googleapis.com:datacatalog": {
    "name": "googleapis.com:datacatalog",
    "apiVersion": "v1beta1",
    "openApiVersion": "3.0.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/googleapis.com/datacatalog/v1beta1/openapi.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/googleapis.com/datacatalog/v1beta1/openapi.json",
    "updated": "2021-07-05T23:08:37.856Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "",
          "schemaPath": "#/additionalProperties",
          "keyword": "additionalProperties",
          "params": {
            "additionalProperty": "source"
          },
          "message": "must NOT have additional properties",
          "instanceValue": "full specification"
        }
      ]
    }
  },
  "nexmo.com:application.v2": {
    "name": "nexmo.com:application.v2",
    "apiVersion": "2.1.0",
    "openApiVersion": "3.0.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/nexmo.com/application.v2/2.1.0/openapi.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/nexmo.com/application.v2/2.1.0/openapi.json",
    "updated": "2021-07-05T15:07:17.927Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1{id}/delete/responses/404",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "description"
          },
          "message": "must have required property 'description'",
          "instanceValue": {
            "$ref": "#/paths/~1{id}/get/responses/404"
          }
        },
        {
          "instancePath": "/paths/~1{id}/delete/responses/404/$ref",
          "schemaPath": "#/definitions/Reference/patternProperties/%5E%5C%24ref%24/format",
          "keyword": "format",
          "params": {
            "format": "uri-reference"
          },
          "message": "must match format \"uri-reference\"",
          "instanceValue": "#/paths/~1{id}/get/responses/404"
        },
        {
          "instancePath": "/paths/~1{id}/delete/responses/404",
          "schemaPath": "#/patternProperties/%5E%5B1-5%5D(%3F%3A%5Cd%7B2%7D%7CXX)%24/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/paths/~1{id}/get/responses/404"
          }
        }
      ]
    }
  },
  "openapi-generator.tech": {
    "name": "openapi-generator.tech",
    "apiVersion": "5.1.1",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/openapi-generator.tech/5.1.1/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/openapi-generator.tech/5.1.1/swagger.json",
    "updated": "2021-06-21T12:16:53.715Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1api~1gen~1clients~1{language}/get/responses/200/schema/additionalProperties",
          "schemaPath": "#/additionalProperties",
          "keyword": "additionalProperties",
          "params": {
            "additionalProperty": "originalRef"
          },
          "message": "must NOT have additional properties",
          "instanceValue": {
            "$ref": "#/definitions/CliOption",
            "originalRef": "CliOption"
          }
        },
        {
          "instancePath": "/paths/~1api~1gen~1clients~1{language}/get/responses/200/schema/additionalProperties",
          "schemaPath": "#/properties/additionalProperties/anyOf/1/type",
          "keyword": "type",
          "params": {
            "type": "boolean"
          },
          "message": "must be boolean",
          "instanceValue": {
            "$ref": "#/definitions/CliOption",
            "originalRef": "CliOption"
          }
        },
        {
          "instancePath": "/paths/~1api~1gen~1clients~1{language}/get/responses/200/schema/additionalProperties",
          "schemaPath": "#/properties/additionalProperties/anyOf",
          "keyword": "anyOf",
          "params": {},
          "message": "must match a schema in anyOf",
          "instanceValue": {
            "$ref": "#/definitions/CliOption",
            "originalRef": "CliOption"
          }
        },
        {
          "instancePath": "/paths/~1api~1gen~1clients~1{language}/get/responses/200/schema",
          "schemaPath": "#/additionalProperties",
          "keyword": "additionalProperties",
          "params": {
            "additionalProperty": "additionalProperties"
          },
          "message": "must NOT have additional properties",
          "instanceValue": {
            "additionalProperties": {
              "$ref": "#/definitions/CliOption",
              "originalRef": "CliOption"
            },
            "type": "object"
          }
        },
        {
          "instancePath": "/paths/~1api~1gen~1clients~1{language}/get/responses/200/schema",
          "schemaPath": "#/properties/schema/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "additionalProperties": {
              "$ref": "#/definitions/CliOption",
              "originalRef": "CliOption"
            },
            "type": "object"
          }
        },
        {
          "instancePath": "/paths/~1api~1gen~1clients~1{language}/get/responses/200",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "$ref"
          },
          "message": "must have required property '$ref'",
          "instanceValue": {
            "description": "successful operation",
            "schema": {
              "additionalProperties": {
                "$ref": "#/definitions/CliOption",
                "originalRef": "CliOption"
              },
              "type": "object"
            }
          }
        },
        {
          "instancePath": "/paths/~1api~1gen~1clients~1{language}/get/responses/200",
          "schemaPath": "#/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "description": "successful operation",
            "schema": {
              "additionalProperties": {
                "$ref": "#/definitions/CliOption",
                "originalRef": "CliOption"
              },
              "type": "object"
            }
          }
        }
      ]
    }
  },
  "opensuse.org:obs": {
    "name": "opensuse.org:obs",
    "apiVersion": "2.10.50",
    "openApiVersion": "3.0.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/opensuse.org/obs/2.10.50/openapi.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/opensuse.org/obs/2.10.50/openapi.json",
    "updated": "2021-07-05T15:07:17.927Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1architectures~1{architecture_name}/get/responses/404/content/application~1xml; charset=utf-8/schema",
          "schemaPath": "#/additionalProperties",
          "keyword": "additionalProperties",
          "params": {
            "additionalProperty": "$ref"
          },
          "message": "must NOT have additional properties",
          "instanceValue": {
            "$ref": "#/paths/~1architectures/get/responses/401/content/application~1xml; charset=utf-8/schema"
          }
        },
        {
          "instancePath": "/paths/~1architectures~1{architecture_name}/get/responses/404/content/application~1xml; charset=utf-8/schema/$ref",
          "schemaPath": "#/definitions/Reference/patternProperties/%5E%5C%24ref%24/format",
          "keyword": "format",
          "params": {
            "format": "uri-reference"
          },
          "message": "must match format \"uri-reference\"",
          "instanceValue": "#/paths/~1architectures/get/responses/401/content/application~1xml; charset=utf-8/schema"
        },
        {
          "instancePath": "/paths/~1architectures~1{architecture_name}/get/responses/404/content/application~1xml; charset=utf-8/schema",
          "schemaPath": "#/properties/schema/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/paths/~1architectures/get/responses/401/content/application~1xml; charset=utf-8/schema"
          }
        },
        {
          "instancePath": "/paths/~1architectures~1{architecture_name}/get/responses/404",
          "schemaPath": "#/definitions/Reference/required",
          "keyword": "required",
          "params": {
            "missingProperty": "$ref"
          },
          "message": "must have required property '$ref'",
          "instanceValue": {
            "content": {
              "application/xml; charset=utf-8": {
                "example": {
                  "code": "unknown_architecture",
                  "summary": "Architecture does not exist: x999"
                },
                "schema": {
                  "$ref": "#/paths/~1architectures/get/responses/401/content/application~1xml; charset=utf-8/schema"
                }
              }
            },
            "description": "Not Found."
          }
        },
        {
          "instancePath": "/paths/~1architectures~1{architecture_name}/get/responses/404",
          "schemaPath": "#/patternProperties/%5E%5B1-5%5D(%3F%3A%5Cd%7B2%7D%7CXX)%24/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "content": {
              "application/xml; charset=utf-8": {
                "example": {
                  "code": "unknown_architecture",
                  "summary": "Architecture does not exist: x999"
                },
                "schema": {
                  "$ref": "#/paths/~1architectures/get/responses/401/content/application~1xml; charset=utf-8/schema"
                }
              }
            },
            "description": "Not Found."
          }
        }
      ]
    }
  },
  "parliament.uk:statutoryinstruments": {
    "name": "parliament.uk:statutoryinstruments",
    "apiVersion": "v1",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/parliament.uk/statutoryinstruments/v1/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/parliament.uk/statutoryinstruments/v1/swagger.json",
    "updated": "2021-06-21T12:16:53.715Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/info/contact/url",
          "schemaPath": "#/properties/url/format",
          "keyword": "format",
          "params": {
            "format": "uri"
          },
          "message": "must match format \"uri\"",
          "instanceValue": ""
        }
      ]
    }
  },
  "parliament.uk:treaties": {
    "name": "parliament.uk:treaties",
    "apiVersion": "v1",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/parliament.uk/treaties/v1/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/parliament.uk/treaties/v1/swagger.json",
    "updated": "2021-05-24T10:27:51.952Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/info/contact/url",
          "schemaPath": "#/properties/url/format",
          "keyword": "format",
          "params": {
            "format": "uri"
          },
          "message": "must match format \"uri\"",
          "instanceValue": ""
        }
      ]
    }
  },
  "prss.org": {
    "name": "prss.org",
    "apiVersion": "2.0.0",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/prss.org/2.0.0/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/prss.org/2.0.0/swagger.json",
    "updated": "2021-06-21T12:16:53.715Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1api~1v2~1metapub~1program-information~1batch/post/responses/202/schema/externalDocs/url",
          "schemaPath": "#/properties/url/format",
          "keyword": "format",
          "params": {
            "format": "uri"
          },
          "message": "must match format \"uri\"",
          "instanceValue": "/api/epg-cd-mapping.html"
        },
        {
          "instancePath": "/paths/~1api~1v2~1metapub~1program-information~1batch/post/responses/202/schema",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "type"
          },
          "message": "must have required property 'type'",
          "instanceValue": {
            "$ref": "#/definitions/ProgramInformationBatch",
            "externalDocs": {
              "description": "Find RadioDns to ContentDepot Mapping here",
              "url": "/api/epg-cd-mapping.html"
            }
          }
        },
        {
          "instancePath": "/paths/~1api~1v2~1metapub~1program-information~1batch/post/responses/202/schema",
          "schemaPath": "#/properties/schema/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/definitions/ProgramInformationBatch",
            "externalDocs": {
              "description": "Find RadioDns to ContentDepot Mapping here",
              "url": "/api/epg-cd-mapping.html"
            }
          }
        },
        {
          "instancePath": "/paths/~1api~1v2~1metapub~1program-information~1batch/post/responses/202",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "$ref"
          },
          "message": "must have required property '$ref'",
          "instanceValue": {
            "description": "The accepted batch information that is queued for processing.",
            "schema": {
              "$ref": "#/definitions/ProgramInformationBatch",
              "externalDocs": {
                "description": "Find RadioDns to ContentDepot Mapping here",
                "url": "/api/epg-cd-mapping.html"
              }
            }
          }
        },
        {
          "instancePath": "/paths/~1api~1v2~1metapub~1program-information~1batch/post/responses/202",
          "schemaPath": "#/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "description": "The accepted batch information that is queued for processing.",
            "schema": {
              "$ref": "#/definitions/ProgramInformationBatch",
              "externalDocs": {
                "description": "Find RadioDns to ContentDepot Mapping here",
                "url": "/api/epg-cd-mapping.html"
              }
            }
          }
        }
      ]
    }
  },
  "rev.ai": {
    "name": "rev.ai",
    "apiVersion": "v1",
    "openApiVersion": "3.0.1",
    "yamlUrl": "https://api.apis.guru/v2/specs/rev.ai/v1/openapi.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/rev.ai/v1/openapi.json",
    "updated": "2021-07-05T15:07:17.927Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1account/get/responses/401",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "description"
          },
          "message": "must have required property 'description'",
          "instanceValue": {
            "$ref": "#/paths/~1jobs~1{id}/get/responses/401"
          }
        },
        {
          "instancePath": "/paths/~1account/get/responses/401/$ref",
          "schemaPath": "#/definitions/Reference/patternProperties/%5E%5C%24ref%24/format",
          "keyword": "format",
          "params": {
            "format": "uri-reference"
          },
          "message": "must match format \"uri-reference\"",
          "instanceValue": "#/paths/~1jobs~1{id}/get/responses/401"
        },
        {
          "instancePath": "/paths/~1account/get/responses/401",
          "schemaPath": "#/patternProperties/%5E%5B1-5%5D(%3F%3A%5Cd%7B2%7D%7CXX)%24/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/paths/~1jobs~1{id}/get/responses/401"
          }
        }
      ]
    }
  },
  "surevoip.co.uk": {
    "name": "surevoip.co.uk",
    "apiVersion": "9dcb0dc8",
    "openApiVersion": "3.0.3",
    "yamlUrl": "https://api.apis.guru/v2/specs/surevoip.co.uk/9dcb0dc8/openapi.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/surevoip.co.uk/9dcb0dc8/openapi.json",
    "updated": "2021-07-05T15:07:17.927Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/paths/~1customers~1{account}~1announcements~1{announcement_id}/delete/parameters/0",
          "schemaPath": "#/definitions/SchemaXORContent/oneOf/0/required",
          "keyword": "required",
          "params": {
            "missingProperty": "schema"
          },
          "message": "must have required property 'schema'",
          "instanceValue": {
            "$ref": "#/paths/~1customers~1{account}~1announcements/get/parameters/0"
          }
        },
        {
          "instancePath": "/paths/~1customers~1{account}~1announcements~1{announcement_id}/delete/parameters/0",
          "schemaPath": "#/definitions/SchemaXORContent/oneOf/1/required",
          "keyword": "required",
          "params": {
            "missingProperty": "content"
          },
          "message": "must have required property 'content'",
          "instanceValue": {
            "$ref": "#/paths/~1customers~1{account}~1announcements/get/parameters/0"
          }
        },
        {
          "instancePath": "/paths/~1customers~1{account}~1announcements~1{announcement_id}/delete/parameters/0",
          "schemaPath": "#/definitions/SchemaXORContent/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/paths/~1customers~1{account}~1announcements/get/parameters/0"
          }
        },
        {
          "instancePath": "/paths/~1customers~1{account}~1announcements~1{announcement_id}/delete/parameters/0/$ref",
          "schemaPath": "#/definitions/Reference/patternProperties/%5E%5C%24ref%24/format",
          "keyword": "format",
          "params": {
            "format": "uri-reference"
          },
          "message": "must match format \"uri-reference\"",
          "instanceValue": "#/paths/~1customers~1{account}~1announcements/get/parameters/0"
        },
        {
          "instancePath": "/paths/~1customers~1{account}~1announcements~1{announcement_id}/delete/parameters/0",
          "schemaPath": "#/properties/parameters/items/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "$ref": "#/paths/~1customers~1{account}~1announcements/get/parameters/0"
          }
        }
      ]
    }
  },
  "trashnothing.com": {
    "name": "trashnothing.com",
    "apiVersion": "1.2",
    "openApiVersion": "3.0.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/trashnothing.com/1.2/openapi.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/trashnothing.com/1.2/openapi.json",
    "updated": "2021-06-21T12:16:53.715Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/info/termsOfService",
          "schemaPath": "#/properties/termsOfService/format",
          "keyword": "format",
          "params": {
            "format": "uri-reference"
          },
          "message": "must match format \"uri-reference\"",
          "instanceValue": "https://trashnothing.com/tos\n"
        }
      ]
    }
  },
  "twinehealth.com": {
    "name": "twinehealth.com",
    "apiVersion": "v7.78.1",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/twinehealth.com/v7.78.1/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/twinehealth.com/v7.78.1/swagger.json",
    "updated": "2021-06-21T12:16:53.715Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/securityDefinitions/OAuth2",
          "schemaPath": "#/additionalProperties",
          "keyword": "additionalProperties",
          "params": {
            "additionalProperty": "flow"
          },
          "message": "must NOT have additional properties",
          "instanceValue": {
            "description": "Fitbit Plus allows customers to access data for their organization using client credentials.\nOAuth2 is a safe and secure way to give you access.\n",
            "flow": "application",
            "scopes": {
              "group": "access patients and data within a group",
              "organization": "access patients and data within an organization"
            },
            "tokenUrl": "/oauth/token",
            "type": "oauth2"
          }
        },
        {
          "instancePath": "/securityDefinitions/OAuth2",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "name"
          },
          "message": "must have required property 'name'",
          "instanceValue": {
            "description": "Fitbit Plus allows customers to access data for their organization using client credentials.\nOAuth2 is a safe and secure way to give you access.\n",
            "flow": "application",
            "scopes": {
              "group": "access patients and data within a group",
              "organization": "access patients and data within an organization"
            },
            "tokenUrl": "/oauth/token",
            "type": "oauth2"
          }
        },
        {
          "instancePath": "/securityDefinitions/OAuth2",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "authorizationUrl"
          },
          "message": "must have required property 'authorizationUrl'",
          "instanceValue": {
            "description": "Fitbit Plus allows customers to access data for their organization using client credentials.\nOAuth2 is a safe and secure way to give you access.\n",
            "flow": "application",
            "scopes": {
              "group": "access patients and data within a group",
              "organization": "access patients and data within an organization"
            },
            "tokenUrl": "/oauth/token",
            "type": "oauth2"
          }
        },
        {
          "instancePath": "/securityDefinitions/OAuth2/flow",
          "schemaPath": "#/properties/flow/enum",
          "keyword": "enum",
          "params": {
            "allowedValues": [
              "password"
            ]
          },
          "message": "must be equal to one of the allowed values",
          "instanceValue": "application"
        },
        {
          "instancePath": "/securityDefinitions/OAuth2/tokenUrl",
          "schemaPath": "#/properties/tokenUrl/format",
          "keyword": "format",
          "params": {
            "format": "uri"
          },
          "message": "must match format \"uri\"",
          "instanceValue": "/oauth/token"
        },
        {
          "instancePath": "/securityDefinitions/OAuth2",
          "schemaPath": "#/required",
          "keyword": "required",
          "params": {
            "missingProperty": "authorizationUrl"
          },
          "message": "must have required property 'authorizationUrl'",
          "instanceValue": {
            "description": "Fitbit Plus allows customers to access data for their organization using client credentials.\nOAuth2 is a safe and secure way to give you access.\n",
            "flow": "application",
            "scopes": {
              "group": "access patients and data within a group",
              "organization": "access patients and data within an organization"
            },
            "tokenUrl": "/oauth/token",
            "type": "oauth2"
          }
        },
        {
          "instancePath": "/securityDefinitions/OAuth2",
          "schemaPath": "#/additionalProperties/oneOf",
          "keyword": "oneOf",
          "params": {
            "passingSchemas": null
          },
          "message": "must match exactly one schema in oneOf",
          "instanceValue": {
            "description": "Fitbit Plus allows customers to access data for their organization using client credentials.\nOAuth2 is a safe and secure way to give you access.\n",
            "flow": "application",
            "scopes": {
              "group": "access patients and data within a group",
              "organization": "access patients and data within an organization"
            },
            "tokenUrl": "/oauth/token",
            "type": "oauth2"
          }
        }
      ]
    }
  },
  "whapi.com:numbers": {
    "name": "whapi.com:numbers",
    "apiVersion": "2.0",
    "openApiVersion": "2.0",
    "yamlUrl": "https://api.apis.guru/v2/specs/whapi.com/numbers/2.0/swagger.yaml",
    "jsonUrl": "https://api.apis.guru/v2/specs/whapi.com/numbers/2.0/swagger.json",
    "updated": "2021-06-21T12:16:53.715Z",
    "result": {
      "valid": false,
      "errors": [
        {
          "instancePath": "/info/license/url",
          "schemaPath": "#/properties/url/format",
          "keyword": "format",
          "params": {
            "format": "uri"
          },
          "message": "must match format \"uri\"",
          "instanceValue": "www.williamhill.com"
        }
      ]
    }
  }
}